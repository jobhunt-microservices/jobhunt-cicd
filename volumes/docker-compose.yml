# docker-compose up -d redis mongodb mysql postgres rabbitmq elasticsearch kibana notification gateway
version: "3.9"
name: "jobhunt-containers"
services:
  # requirement technical
  redis:
    container_name: redis_container
    image: arm64v8/redis:alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --loglevel warning
    volumes:
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongodb/mongodb-community-server:latest
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=Asdfgh123
      - MONGO_INITDB_DATABASE=jobhunt_users
    volumes:
      - ./docker-volumes/mongodb:/data/db
  mysql:
    container_name: mysql_container
    image: arm64v8/mysql:latest
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=Asdfgh1@3
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=Asdfgh1@3
      - MYSQL_DATABASE=jobhunt_auth
    ports:
      - "3306:3306"
    volumes:
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: arm64v8/postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=Asdfgh1@3
      - POSTGRES_DB=jobhunt_review
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    volumes:
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: arm64v8/rabbitmq:3-management-alpine
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=Asdfgh1@3
    ports:
      - "5672:5672"
      - "15672:15672"
  elasticsearch:
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    restart: always
    ports:
      - "9200:9200"
    environment:
      - ELASTIC_PASSWORD=Asdfgh1@3
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.authc.api_key.enabled=true
      - xpack.monitoring.collection.enabled=true
      - xpack.security.enrollment.enabled=true
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:8.15.3
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports:
      - "5601:5601"
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    networks:
      - elastic
    depends_on:
      - elasticsearch
  # built services
  gateway:
    container_name: gateway_container
    build:
      context: ../microservices/1-gateway-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "4000:4000"
    env_file:
      - ../microservices/1-gateway-service/.env
    environment:
      - NODE_ENV=development
      - ENABLE_APM=0
      - GATEWAY_JWT_TOKEN=4d3ec4249ecb5c1d475d846af1697feb
      - JWT_TOKEN=318be04d07bc60325d77c4d8a8537bc2
      - SECRET_KEY_ONE=6d94629edbd091dfc5aa2d1e18c4d78a
      - SECRET_KEY_TWO=fd8adc0b540e219044b0ac3fcec4e371
      # - CLIENT_URL=http://localhost:3000
      # - AUTH_BASE_URL=http://localhost:4002
      # - USERS_BASE_URL=http://localhost:4003
      # - GIG_BASE_URL=http://localhost:4004
      # - MESSAGE_BASE_URL=http://localhost:4005
      # - ORDER_BASE_URL=http://localhost:4006
      # - REVIEW_BASE_URL=http://localhost:4007
      - REDIS_HOST=redis://redis_container:6379
      - ELASTIC_SEARCH_URL=http://admin:Asdfgh1@3@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
  notification:
    container_name: notification_container
    build:
      context: ../microservices/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "4001:4001"
    env_file:
      - ../microservices/2-notification-service/.env
    environment:
      - NODE_ENV=development
      - ENABLE_APM=0
      - CLIENT_URL=http://localhost:3000
      - RABBITMQ_ENDPOINT=amqp://admin:Asdfgh1@3@rabbitmq_container:5672
      - SENDER_EMAIL=crystal.heller59@ethereal.email
      - SENDER_PASSWORD=QNxXSF1uRNm9QZbtBm
      - ELASTIC_SEARCH_URL=http://admin:Asdfgh1@3@elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://elasticsearch_container:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch
networks:
  elastic:
    name: elastic
